/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/
params {

    // container info
    scanpy_scripts_container  = "quay.io/biocontainers/scanpy-scripts:1.1.2--pypyhdfd78af_1"

    // technology options
    technology                = "plate"
    batch_variable            = ""

    // paths & outputs
    dir_path                  = "."
    output_path               = null
    result_dir_path           = "${params.output_path ?: params.dir_path + '/results'}"
    publish_dir_mode          = "copy"

    // cells clustering options
    representation            = "X_pca"
    celltype_field            = 'NO_CELLTYPE_FIELD'
    neighbor_values           = ['3', '5', '10', '15', '20', '25', '30', '50', '100']
    perplexity_values         = ['1', '5', '10', '15', '20', '25', '30', '35', '40', '45', '50']
    resolution_values         = ['0.1', '0.3', '0.5', '0.7', '1.0', '2.0', '3.0', '4.0', '5.0']
    slotname                  = "louvain_resolution"
    clustering_slotname       = params.resolution_values.collect { params.slotname + "_" + it }
    merged_group_slotname     = params.clustering_slotname + [params.celltype_field]

}


manifest {

    name                = 'ebi-gene-expression-group/scxa-tertiary-workflow'
    author              = """Anil Thanki <anilthanki@ebi.ac.uk>, Iris Yu <irisyu@ebi.ac.uk>, Pedro Madrigal <pmadrigal@ebi.ac.uk>"""
    description         = """Tertiary clustering workflow for single-cell expression analysis"""
    version             = '1.0.0'

}

includeConfig 'conf/base.config'
includeConfig 'conf/modules.config'

profiles {
    docker {
        docker.enabled = true
    }

    singularity {
        singularity.enabled   = false
        conda.enabled         = false
    }

    conda {
        // cacheDir = "$SCXA_WORKFLOW_ROOT/envs"
        conda.enabled         = false
        conda.createTimeout   = "30 min"
        conda.useMamba        = true
    }
}

trace {
    enabled                 = true
    file                    = "${params.result_dir_path}/pipeline_info/execution_trace.txt"
    overwrite               = true
}

timeline {
    enabled                 = true
    file                    = "${params.result_dir_path}/pipeline_info/execution_timeline.html"
    overwrite               = true
}

report {
    enabled                 = true
    file                    = "${params.result_dir_path}/pipeline_info/execution_report.html"
    overwrite               = true
}

dag {
    enabled                 = true
    file                    = "${params.result_dir_path}/pipeline_info/pipeline_dag.html"
    overwrite               = true
}

profiles {
    atlas {
        process {
            executor='slurm'
            queue="$SCXA_HPC_QUEUE"
            clusterOptions="$SCXA_HPC_OPTIONS"
            time = '7 d'
            queueSize=500
            exitReadTimeout='100000 sec'
            pollInterval = '5sec'
        }

        singularity.enabled = true
    }
    docker {
        docker {
            enabled = true
            runOptions = "--platform linux/amd64"
        }
    }
    singularity {
        singularity.enabled = true
    }
}
